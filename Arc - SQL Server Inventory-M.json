{
  "properties": {
    "lenses": [
      {
        "order": 0,
        "parts": [
          {
            "position": {
              "x": 0,
              "y": 0,
              "colSpan": 16,
              "rowSpan": 2
            },
            "metadata": {
              "inputs": [],
              "type": "Extension/HubsExtension/PartType/MarkdownPart",
              "settings": {
                "content": {
                  "content": "<div style='line-height:50px;'>\n<span style='font-size:20px;font-weight:bold'>Arc - SQL Server Inventory</span>\n<br/>\n<span style='font-size:20px'>This dashboard provides insights into the entire SQL Server estate enabled by Azure Arc.</span>\n</div>",
                  "title": "",
                  "subtitle": "",
                  "markdownSource": 1,
                  "markdownUri": ""
                }
              }
            }
          },
          {
            "position": {
              "x": 0,
              "y": 2,
              "colSpan": 3,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "chartType",
                  "isOptional": true
                },
                {
                  "name": "isShared",
                  "isOptional": true
                },
                {
                  "name": "queryId",
                  "isOptional": true
                },
                {
                  "name": "formatResults",
                  "isOptional": true
                },
                {
                  "name": "partTitle",
                  "value": "Query 1",
                  "isOptional": true
                },
                {
                  "name": "queryScope",
                  "value": {
                    "scope": 0,
                    "values": []
                  },
                  "isOptional": true
                },
                {
                  "name": "query",
                  "value": "// Count of all Servers\nresources\n| where type =~ 'microsoft.hybridcompute/machines'\n| summarize ServerCount = count()",
                  "isOptional": true
                }
              ],
              "type": "Extension/HubsExtension/PartType/ArgQuerySingleValueTile",
              "settings": {},
              "partHeader": {
                "title": "All Servers",
                "subtitle": "Servers enabled by Azure Arc"
              }
            }
          },
          {
            "position": {
              "x": 3,
              "y": 2,
              "colSpan": 3,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "partTitle",
                  "value": "Query 1",
                  "isOptional": true
                },
                {
                  "name": "chartType",
                  "isOptional": true
                },
                {
                  "name": "isShared",
                  "isOptional": true
                },
                {
                  "name": "queryId",
                  "isOptional": true
                },
                {
                  "name": "formatResults",
                  "isOptional": true
                },
                {
                  "name": "queryScope",
                  "value": {
                    "scope": 0,
                    "values": []
                  },
                  "isOptional": true
                },
                {
                  "name": "query",
                  "value": "//Standard VM Query - VM alone\n//Can be used in other queries, pulls out the most important properties for Arc VMs\n//Main Table - All Arc Virtual Machines\nresources\n//Arc registered VMs (Windows & linux)\n| where type == \"microsoft.hybridcompute/machines\"\n//Boolean - SQL installed (true/false)\n| extend mssqlDiscovered = properties.mssqlDiscovered\n//Machine Characteristics\n| extend coreCount = toint(properties.detectedProperties.coreCount)\n| extend logicalCoreCount = toint(properties.detectedProperties.logicalcoreCount)\n| extend processerNames = tostring(properties.detectedProperties.processorNames)\n| extend totalPhysicalMemory =  toint(properties.detectedProperties.totalPhysicalMemoryInGigabytes)\n//Machine ID & Name\n| extend machineId = tolower(tostring(id))\n| extend machineName = name\n//Operating System\n| extend osSku = tostring(properties.osSku)\n| extend osName = tostring(properties.osName)\n| extend osVersion = tostring(properties.osVersion)\n//Windows or Linux\n| extend osType = tostring(properties.osType)\n| where osType == \"windows\"\n//OS Edition (Datacenter or Standard) \n| extend osEdition = iff(properties.osSku contains \"Datacenter\", \"Datacenter\", \"Standard\")\n//ESU Assignment (esu eligibility - OS is ESU capable, License Assignment State - OS does/does not have ESU assigned\n| extend ESU = properties.licenseProfile.esuProfile.licenseAssignmentState\n| extend esuEligibility = tostring(properties.licenseProfile.esuProfile.esuEligibility)\n//Type of ESU assigned (Standard/Data center)\n| extend serverType = tostring(properties.licenseProfile.esuProfile.serverType)\n| summarize windowsServerCount = count()",
                  "isOptional": true
                }
              ],
              "type": "Extension/HubsExtension/PartType/ArgQuerySingleValueTile",
              "settings": {
                "content": {}
              },
              "partHeader": {
                "title": "All Windows Servers",
                "subtitle": "Windows Servers enabled by Arc"
              }
            }
          },
          {
            "position": {
              "x": 6,
              "y": 2,
              "colSpan": 3,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "partTitle",
                  "value": "Query 1",
                  "isOptional": true
                },
                {
                  "name": "chartType",
                  "isOptional": true
                },
                {
                  "name": "isShared",
                  "isOptional": true
                },
                {
                  "name": "queryId",
                  "isOptional": true
                },
                {
                  "name": "formatResults",
                  "isOptional": true
                },
                {
                  "name": "queryScope",
                  "value": {
                    "scope": 0,
                    "values": []
                  },
                  "isOptional": true
                },
                {
                  "name": "query",
                  "value": "//Standard VM Query - VM alone\n//Can be used in other queries, pulls out the most important properties for Arc VMs\n//Main Table - All Arc Virtual Machines\nresources\n//Arc registered VMs (Windows & linux)\n| where type == \"microsoft.hybridcompute/machines\"\n//Boolean - SQL installed (true/false)\n| extend mssqlDiscovered = properties.mssqlDiscovered\n| where mssqlDiscovered == \"true\"\n//Machine Characteristics\n| extend coreCount = toint(properties.detectedProperties.coreCount)\n| extend logicalCoreCount = toint(properties.detectedProperties.logicalcoreCount)\n| extend processerNames = tostring(properties.detectedProperties.processorNames)\n| extend totalPhysicalMemory =  toint(properties.detectedProperties.totalPhysicalMemoryInGigabytes)\n//Machine ID & Name\n| extend machineId = tolower(tostring(id))\n| extend machineName = name\n//Operating System\n| extend osSku = tostring(properties.osSku)\n| extend osName = tostring(properties.osName)\n| extend osVersion = tostring(properties.osVersion)\n//Windows or Linux\n| extend osType = tostring(properties.osType)\n//OS Edition (Datacenter or Standard) \n| extend osEdition = iff(properties.osSku contains \"Datacenter\", \"Datacenter\", \"Standard\")\n//ESU Assignment (esu eligibility - OS is ESU capable, License Assignment State - OS does/does not have ESU assigned\n| extend ESU = properties.licenseProfile.esuProfile.licenseAssignmentState\n| extend esuEligibility = tostring(properties.licenseProfile.esuProfile.esuEligibility)\n//Type of ESU assigned (Standard/Data center)\n| extend serverType = tostring(properties.licenseProfile.esuProfile.serverType)\n| summarize SQLServerCount = count()",
                  "isOptional": true
                }
              ],
              "type": "Extension/HubsExtension/PartType/ArgQuerySingleValueTile",
              "settings": {
                "content": {}
              },
              "partHeader": {
                "title": "SQL Server servers",
                "subtitle": "Count of servers running SQL Server"
              }
            }
          },
          {
            "position": {
              "x": 9,
              "y": 2,
              "colSpan": 3,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "chartType",
                  "isOptional": true
                },
                {
                  "name": "isShared",
                  "isOptional": true
                },
                {
                  "name": "queryId",
                  "isOptional": true
                },
                {
                  "name": "formatResults",
                  "isOptional": true
                },
                {
                  "name": "partTitle",
                  "value": "Query 1",
                  "isOptional": true
                },
                {
                  "name": "queryScope",
                  "value": {
                    "scope": 0,
                    "values": []
                  },
                  "isOptional": true
                },
                {
                  "name": "query",
                  "value": "// Count of all resources\nresources\n| where  type == \"microsoft.azurearcdata/sqlserverinstances\"\n| summarize Servers=count()\n",
                  "isOptional": true
                }
              ],
              "type": "Extension/HubsExtension/PartType/ArgQuerySingleValueTile",
              "settings": {},
              "partHeader": {
                "title": "SQL Server Instances",
                "subtitle": "Count of SQL Server Instances"
              }
            }
          },
          {
            "position": {
              "x": 0,
              "y": 6,
              "colSpan": 4,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "isShared",
                  "isOptional": true
                },
                {
                  "name": "queryId",
                  "isOptional": true
                },
                {
                  "name": "formatResults",
                  "isOptional": true
                },
                {
                  "name": "partTitle",
                  "value": "Query 1",
                  "isOptional": true
                },
                {
                  "name": "chartType",
                  "value": 1,
                  "isOptional": true
                },
                {
                  "name": "queryScope",
                  "value": {
                    "scope": 0,
                    "values": []
                  },
                  "isOptional": true
                },
                {
                  "name": "query",
                  "value": "resources\n| where type == \"microsoft.azurearcdata/sqlserverinstances\"\n| extend version = tostring(properties['version'])\n| summarize Count=count() by ['version']\n| order by ['version'] asc ",
                  "isOptional": true
                }
              ],
              "type": "Extension/HubsExtension/PartType/ArgQueryChartTile",
              "settings": {},
              "partHeader": {
                "title": "SQL Server Versions",
                "subtitle": "Count of SQL Server instances by version"
              }
            }
          },
          {
            "position": {
              "x": 4,
              "y": 6,
              "colSpan": 4,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "isShared",
                  "isOptional": true
                },
                {
                  "name": "queryId",
                  "isOptional": true
                },
                {
                  "name": "formatResults",
                  "isOptional": true
                },
                {
                  "name": "partTitle",
                  "value": "Query 1",
                  "isOptional": true
                },
                {
                  "name": "queryScope",
                  "value": {
                    "scope": 0,
                    "values": []
                  },
                  "isOptional": true
                },
                {
                  "name": "query",
                  "value": "    resources\n    | where type == 'microsoft.azurearcdata/sqlserverinstances'\n    | extend version = tostring(properties.version)\n    | extend edition = properties.edition\n    | extend containerId = tolower(tostring (properties.containerResourceId))\n    //add clause back in for live dashboard\n    | extend serverClass = iff(edition in (\"Enterprise\", \"Standard\"), \"Ent/Std\", \"Express/Dev etc\") \n| summarize count() by serverClass",
                  "isOptional": true
                },
                {
                  "name": "chartType",
                  "value": 1,
                  "isOptional": true
                }
              ],
              "type": "Extension/HubsExtension/PartType/ArgQueryChartTile",
              "settings": {},
              "partHeader": {
                "title": "SQL Server Edition Type",
                "subtitle": "Standard or Enterprise Edition vs other SQL Server Editions"
              }
            }
          },
          {
            "position": {
              "x": 8,
              "y": 6,
              "colSpan": 4,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "isShared",
                  "isOptional": true
                },
                {
                  "name": "queryId",
                  "isOptional": true
                },
                {
                  "name": "formatResults",
                  "isOptional": true
                },
                {
                  "name": "partTitle",
                  "value": "Query 2",
                  "isOptional": true
                },
                {
                  "name": "queryScope",
                  "value": {
                    "scope": 0,
                    "values": []
                  },
                  "isOptional": true
                },
                {
                  "name": "query",
                  "value": "resources\n| where  type == \"microsoft.azurearcdata/sqlserverinstances\"\n| summarize Count=count() by iff(tostring(properties['azureDefenderStatus'])==\"Unknown\", \"Not Protected\",tostring(properties['azureDefenderStatus']))\n| order by Count desc",
                  "isOptional": true
                },
                {
                  "name": "chartType",
                  "value": 1,
                  "isOptional": true
                }
              ],
              "type": "Extension/HubsExtension/PartType/ArgQueryChartTile",
              "settings": {},
              "partHeader": {
                "title": "Defender for SQL Server",
                "subtitle": "Count of SQL Server servers by Defender protection status"
              }
            }
          },
          {
            "position": {
              "x": 0,
              "y": 10,
              "colSpan": 16,
              "rowSpan": 7
            },
            "metadata": {
              "inputs": [
                {
                  "name": "partTitle",
                  "value": "Query 2",
                  "isOptional": true
                },
                {
                  "name": "chartType",
                  "isOptional": true
                },
                {
                  "name": "isShared",
                  "isOptional": true
                },
                {
                  "name": "formatResults",
                  "isOptional": true
                },
                {
                  "name": "queryScope",
                  "value": {
                    "scope": 0,
                    "values": []
                  },
                  "isOptional": true
                },
                {
                  "name": "query",
                  "value": "resources\r\n| where type == \"microsoft.azurearcdata/sqlserverinstances\"\r\n| extend d=parse_json(properties)\r\n| extend  SQLEdition=d[\"edition\"]\r\n| extend  SQLVersion=d[\"version\"]\r\n| extend InstanceLicenseType=d[\"licenseType\"]\r\n| extend vCores=d[\"vCore\"]\r\n| project AzureResourceName=name, derivedmachineName=iff((substring(name, 0, indexof(name, \"_\"))) == \"\", name, substring(name, 0, indexof(name, \"_\"))), SQLEdition, SQLVersion, InstanceLicenseType, vCores\r\n| join kind=leftouter(\r\n    resources\r\n    | where type == \"microsoft.hybridcompute/machines/extensions\"\r\n    | where properties.type in (\"WindowsAgent.SqlServer\",\"LinuxAgent.SqlServer\")\r\n    | extend d=parse_json(properties)\r\n    | extend ExtensionLicenseType=d[\"settings\"][\"LicenseType\"]\r\n    | extend ESU = iff(notnull(properties.settings.enableExtendedSecurityUpdates), \"enabled\", \"\")\r\n    | parse id with * '/providers/Microsoft.HybridCompute/machines/' machineName '/extensions/' *\r\n    | project ExtensionLicenseType, HostName=machineName\r\n) on $left.derivedmachineName == $right.HostName\r\n| summarize \r\n    SQLVersion = any(SQLVersion),\r\n    SQLEdition = any(SQLEdition),\r\n    ExtensionLicenseType = any(ExtensionLicenseType),\r\n    InstanceLicenseType = any(InstanceLicenseType),\r\n    vCores = any(vCores)   \r\nby HostName  // Group by HostName to ensure each HostName is unique\r\n| project HostName, SQLVersion, SQLEdition, ExtensionLicenseType, InstanceLicenseType, vCores",
                  "isOptional": true
                },
                {
                  "name": "queryId",
                  "isOptional": true
                }
              ],
              "type": "Extension/HubsExtension/PartType/ArgQueryGridTile",
              "settings": {},
              "partHeader": {
                "title": "SQL Server servers Information",
                "subtitle": "List of SQL Server servers with Version,Edition and vCores"
              }
            }
          },
          {
            "position": {
              "x": 0,
              "y": 17,
              "colSpan": 16,
              "rowSpan": 5
            },
            "metadata": {
              "inputs": [
                {
                  "name": "partTitle",
                  "value": "Query 4",
                  "isOptional": true
                },
                {
                  "name": "query",
                  "value": "resources\r\n| where  type == \"microsoft.sql/managedinstances/databases\" or \r\n  type == \"microsoft.azurearcdata/sqlserverinstances/databases\" \r\n| summarize Dbs=count(),Offline=sum(toint(iif(tostring(properties[\"state\"])!=\"Online\",1,0)))\r\n,SizeMB=sum(toint(iif(tostring(properties[\"sizeMB\"])!=\"\",properties[\"sizeMB\"],0)))\r\n,Type=max(iff( type==\"microsoft.sql/managedinstances/databases\",\"Azure SQL Manage Instance\"\r\n,iif(type==\"microsoft.azurearcdata/sqlserverinstances/databases\",\"Arc Enable SQL Server\",iif(type==\"microsoft.sql/servers/databases\",\"Azure SQL Server On VM\",\"Azure SQL DB\")))) by Instances = tostring(split(tostring(id),\"/\")[8])\r\n| order by Offline",
                  "isOptional": true
                },
                {
                  "name": "chartType",
                  "isOptional": true
                },
                {
                  "name": "isShared",
                  "isOptional": true
                },
                {
                  "name": "queryId",
                  "value": "",
                  "isOptional": true
                },
                {
                  "name": "formatResults",
                  "isOptional": true
                },
                {
                  "name": "queryScope",
                  "value": {
                    "scope": 0,
                    "values": []
                  },
                  "isOptional": true
                }
              ],
              "type": "Extension/HubsExtension/PartType/ArgQueryGridTile",
              "settings": {},
              "partHeader": {
                "title": "Databases per SQL Instance",
                "subtitle": "Databases include System DBs"
              }
            }
          },
          {
            "position": {
              "x": 0,
              "y": 22,
              "colSpan": 4,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "isShared",
                  "isOptional": true
                },
                {
                  "name": "queryId",
                  "isOptional": true
                },
                {
                  "name": "formatResults",
                  "isOptional": true
                },
                {
                  "name": "partTitle",
                  "value": "Query 2",
                  "isOptional": true
                },
                {
                  "name": "chartType",
                  "value": 1,
                  "isOptional": true
                },
                {
                  "name": "queryScope",
                  "value": {
                    "scope": 0,
                    "values": []
                  },
                  "isOptional": true
                },
                {
                  "name": "query",
                  "value": "// If distinct count is small (e.g. < 1000)\n// run next query to get count of each value\nresources\n| where type == \"microsoft.azurearcdata/sqlserverinstances/databases\"\n|summarize Count=count() by tostring(properties['compatibilityLevel'])\n| order by Count desc",
                  "isOptional": true
                }
              ],
              "type": "Extension/HubsExtension/PartType/ArgQueryChartTile",
              "settings": {},
              "partHeader": {
                "title": "Compatibility Level",
                "subtitle": "Count of databases by compatibilty level"
              }
            }
          },
          {
            "position": {
              "x": 4,
              "y": 22,
              "colSpan": 4,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "partTitle",
                  "value": "Query 1",
                  "isOptional": true
                },
                {
                  "name": "query",
                  "value": "resources\r\n| where type == \"microsoft.azurearcdata/sqlserverinstances/databases\"\r\n| where name != \"tempdb\"\r\n| where name != \"model\"\r\n| where name != \"master\"\r\n| where name != \"msdb\"\r\n| extend prop_db=parse_xml(properties) \r\n| extend Recovery_Model = prop_db.recoveryMode\r\n| summarize Count = count() by tostring(Recovery_Model)",
                  "isOptional": true
                },
                {
                  "name": "chartType",
                  "value": 1,
                  "isOptional": true
                },
                {
                  "name": "isShared",
                  "isOptional": true
                },
                {
                  "name": "queryId",
                  "value": "",
                  "isOptional": true
                },
                {
                  "name": "formatResults",
                  "isOptional": true
                },
                {
                  "name": "queryScope",
                  "value": {
                    "scope": 0,
                    "values": []
                  },
                  "isOptional": true
                }
              ],
              "type": "Extension/HubsExtension/PartType/ArgQueryChartTile",
              "settings": {},
              "partHeader": {
                "title": "SQL Recovery Mode",
                "subtitle": ""
              }
            }
          },
          {
            "position": {
              "x": 8,
              "y": 22,
              "colSpan": 4,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "isShared",
                  "isOptional": true
                },
                {
                  "name": "queryId",
                  "isOptional": true
                },
                {
                  "name": "formatResults",
                  "isOptional": true
                },
                {
                  "name": "partTitle",
                  "value": "Query 1",
                  "isOptional": true
                },
                {
                  "name": "queryScope",
                  "value": {
                    "scope": 0,
                    "values": []
                  },
                  "isOptional": true
                },
                {
                  "name": "query",
                  "value": "resources\n| where ['type']  ==\"microsoft.azurearcdata/sqlserverinstances/databases\"\n| summarize Count=count() by Encrypte=iif(tostring(properties['databaseOptions'].isEncrypted)==\"false\",\"No\", \"Yes\")",
                  "isOptional": true
                },
                {
                  "name": "chartType",
                  "value": 1,
                  "isOptional": true
                }
              ],
              "type": "Extension/HubsExtension/PartType/ArgQueryChartTile",
              "settings": {},
              "partHeader": {
                "title": "Encrypted Databases",
                "subtitle": "Count of databases encrypted and not encrypted"
              }
            }
          },
          {
            "position": {
              "x": 12,
              "y": 22,
              "colSpan": 4,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "partTitle",
                  "value": "Query 2",
                  "isOptional": true
                },
                {
                  "name": "query",
                  "value": "resources\r\n| where type == \"microsoft.azurearcdata/sqlserverinstances/databases\"\r\n| where name != \"tempdb\"\r\n| extend prop_db=parse_xml(properties) \r\n| extend prop_db_recoveryMode = prop_db.recoveryMode\r\n| extend prop_db_databaseCreationDate = todatetime(prop_db.databaseCreationDate)\r\n| extend prop_db_backupInformation = prop_db.backupInformation\r\n| extend prop_db_backupInformation_lastFullBackup = todatetime(prop_db.backupInformation.lastFullBackup)\r\n| extend calc_lastBackupAgeDays = iff(isnull(prop_db_backupInformation_lastFullBackup),\r\n                                        datetime_diff('Day',now(),prop_db_databaseCreationDate),\r\n                                        datetime_diff('Day',now(),prop_db_backupInformation_lastFullBackup)\r\n                                    )\r\n| extend Backup_1day = iif( calc_lastBackupAgeDays <=1 , 1 , 0)\r\n| extend Backup_7day = iif( calc_lastBackupAgeDays >1  and calc_lastBackupAgeDays <=7 , 1 , 0)\r\n| extend Backup_over7day = iif( calc_lastBackupAgeDays >7 , 1 , 0)\r\n| extend Backup_desc = case(\r\n                            isnull(prop_db_backupInformation_lastFullBackup), \"no backups at all\", \r\n                            datetime_diff('Day',now(),prop_db_backupInformation_lastFullBackup) <= 1, \"1 day\", \r\n                            datetime_diff('Day',now(),prop_db_backupInformation_lastFullBackup) <= 7, \"7 days\", \r\n                            datetime_diff('Day',now(),prop_db_backupInformation_lastFullBackup) <= 30, \"1 Month\", \r\n                            \"older than a month\")\r\n| project database_name = name, RecoveryModel = prop_db_recoveryMode, Last_Full_Backup = prop_db_backupInformation_lastFullBackup , Backup_Age_Days = calc_lastBackupAgeDays  ,Backup_1day  ,Backup_7day  ,Backup_over7day, Backup_desc\r\n| summarize Count=count() by Backup_desc",
                  "isOptional": true
                },
                {
                  "name": "chartType",
                  "value": 1,
                  "isOptional": true
                },
                {
                  "name": "isShared",
                  "isOptional": true
                },
                {
                  "name": "queryId",
                  "value": "",
                  "isOptional": true
                },
                {
                  "name": "formatResults",
                  "isOptional": true
                },
                {
                  "name": "queryScope",
                  "value": {
                    "scope": 0,
                    "values": []
                  },
                  "isOptional": true
                }
              ],
              "type": "Extension/HubsExtension/PartType/ArgQueryChartTile",
              "settings": {},
              "partHeader": {
                "title": "SQL Server Backups Interval",
                "subtitle": ""
              }
            }
          },
          {
            "position": {
              "x": 0,
              "y": 26,
              "colSpan": 18,
              "rowSpan": 7
            },
            "metadata": {
              "inputs": [
                {
                  "name": "partTitle",
                  "value": "Query 1",
                  "isOptional": true
                },
                {
                  "name": "chartType",
                  "isOptional": true
                },
                {
                  "name": "isShared",
                  "isOptional": true
                },
                {
                  "name": "formatResults",
                  "isOptional": true
                },
                {
                  "name": "queryScope",
                  "value": {
                    "scope": 0,
                    "values": []
                  },
                  "isOptional": true
                },
                {
                  "name": "query",
                  "value": "resources\r\n| where type == 'microsoft.azurearcdata/sqlserverinstances'\r\n| extend Version = properties.version\r\n| extend Edition = properties.edition\r\n| extend containerId = tolower(tostring (properties.containerResourceId))\r\n| where Version in (\"SQL Server 2012\", \"SQL Server 2014\")\r\n| where Edition in (\"Enterprise\", \"Standard\")\r\n| where isnotempty(containerId)\r\n| project containerId, SQL_instance = name, Version, Edition\r\n| join kind=inner (\r\n   resources\r\n   | where type == \"microsoft.hybridcompute/machines\"\r\n   | extend machineId = tolower(tostring(id))\r\n   | project machineId, Machine_name = name\r\n)\r\non $left.containerId == $right.machineId\r\n| join kind=inner (\r\n   resources\r\n   | where type == \"microsoft.hybridcompute/machines/extensions\"\r\n   | where properties.type in (\"WindowsAgent.SqlServer\",\"LinuxAgent.SqlServer\")\r\n   | extend machineIdHasSQLServerExtensionInstalled = tolower(iff(id contains \"/extensions/WindowsAgent.SqlServer\" or id contains \"/extensions/LinuxAgent.SqlServer\", substring(id, 0, indexof(id, \"/extensions/\")), \"\"))\r\n   | project machineIdHasSQLServerExtensionInstalled,\r\n    Extension_State = properties.provisioningState, \r\n    License_Type = properties.settings.LicenseType, \r\n    ESU = properties.settings.enableExtendedSecurityUpdates, \r\n    ESU2 = iff(notnull(properties.settings.enableExtendedSecurityUpdates), iff(properties.settings.enableExtendedSecurityUpdates == 'true',\"ENABLED\",\"disabled\"), \"disabled\"),\r\n    Extension_Version = properties.instanceView.typeHandlerVersion\r\n)\r\non $left.machineId == $right.machineIdHasSQLServerExtensionInstalled\r\n| project-away machineId, containerId, machineIdHasSQLServerExtensionInstalled",
                  "isOptional": true
                },
                {
                  "name": "queryId",
                  "isOptional": true
                }
              ],
              "type": "Extension/HubsExtension/PartType/ArgQueryGridTile",
              "settings": {},
              "partHeader": {
                "title": "SQL Server Instances - ESU Inventory",
                "subtitle": "List of SQL Server Instances ESU enabled"
              }
            }
          }
        ]
      }
    ],
    "metadata": {
      "model": {
        "timeRange": {
          "value": {
            "relative": {
              "duration": 24,
              "timeUnit": 1
            }
          },
          "type": "MsPortalFx.Composition.Configuration.ValueTypes.TimeRange"
        }
      }
    }
  },
  "name": "Arc - SQL Server Inventory",
  "type": "Microsoft.Portal/dashboards",
  "location": "INSERT LOCATION",
  "tags": {
    "hidden-title": "Arc - SQL Server Inventory"
  },
  "apiVersion": "2022-12-01-preview"
}